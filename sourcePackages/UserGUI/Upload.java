/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UserGUI;

import backend.*;
import java.awt.*;
import java.awt.image.BufferedImage;
import java.io.*;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JLabel;

/**
 *
 * @author Daniel M.
 */
public class Upload extends javax.swing.JFrame {

    BufferedImage img;
    JLabel picLabel;
    /**
     * Creates new form Upload
     */
    public Upload(File file,registeredUser user) throws IOException {
        initComponents();
        currentUser = user;
        uData = UserLogin.uData;
        pData = UserLogin.pData;
        fileName = file.getAbsolutePath();
        try{
            ImageIcon ii = new ImageIcon(scaleImage(picturePreview.getWidth(),
                    picturePreview.getHeight(),ImageIO.read(new File(fileName))));
            picturePreview.setIcon(ii);
        }
        catch(Exception e){
            e.printStackTrace();
        }
    }
    
    public Upload()
    {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        captiontextfield = new javax.swing.JTextField();
        cancel = new javax.swing.JButton();
        upload = new javax.swing.JButton();
        hashtagLabel = new javax.swing.JLabel();
        picturePreview = new javax.swing.JLabel();
        hashtagTextField = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        captiontextfield.setText("");

        cancel.setText("Cancel");
        cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelActionPerformed(evt);
            }
        });

        upload.setText("Upload");
        upload.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                uploadActionPerformed(evt);
            }
        });

        hashtagLabel.setText("Hashtags");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(140, 140, 140)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(hashtagLabel)
                                .addGap(18, 18, 18)
                                .addComponent(hashtagTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 251, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(upload)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 208, Short.MAX_VALUE)
                                .addComponent(cancel))
                            .addComponent(captiontextfield)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(190, 190, 190)
                        .addComponent(picturePreview, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(140, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(picturePreview, javax.swing.GroupLayout.PREFERRED_SIZE, 260, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(hashtagLabel)
                    .addComponent(hashtagTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 46, Short.MAX_VALUE)
                .addComponent(captiontextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancel)
                    .addComponent(upload))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void uploadActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_uploadActionPerformed
        /*File file = new File("C:/Users/Christian/Documents/NetBeansProjects/project3/index.txt");
        int index = 0;
        try {
            try (Scanner fileRead = new Scanner(file)) {
                index = Integer.parseInt(fileRead.nextLine());
                fileRead.close();
            }
            index++;
        } catch (FileNotFoundException ex) {
            try (PrintWriter writer = new PrintWriter(file, "UTF-8")) {
                try (BufferedWriter fileWrite = new BufferedWriter(new FileWriter(file))) {
            fileWrite.write(Integer.toString(index));
            fileWrite.flush();
        }       catch (IOException ex1) {
                    Logger.getLogger(Upload.class.getName()).log(Level.SEVERE, null, ex1);
                }
        }   catch (FileNotFoundException ex1) {
                Logger.getLogger(Upload.class.getName()).log(Level.SEVERE, null, ex1);
            } catch (UnsupportedEncodingException ex1) {
                Logger.getLogger(Upload.class.getName()).log(Level.SEVERE, null, ex1);
            }
        
        String  filename = Integer.toString(index);
        File filePath = new File("C:/Users/Christian/Documents/NetBeansProjects/project3/" + filename + ".jpg");
        try {
            ImageIO.write(img, "jpg", filePath);
        } catch (IOException ex1) {
            Logger.getLogger(Upload.class.getName()).log(Level.SEVERE, null, ex);
        }
        }*/
        String rawHash = "all "+hashtagTextField.getText();
        ArrayList<String> hashtags = new ArrayList<>(Arrays.asList(rawHash.split("\\s+")));
        Post post = new Post(fileName, currentUser, hashtags,0);
        post.addComment(captiontextfield.getText());
        pData.addPost(post);
        System.out.println("Uploaded post");
        GUI backToMain = new GUI();
        backToMain.defaultFeed(pData, currentUser, uData);
        backToMain.setVisible(true);
        this.dispose();
        
        
        
    }//GEN-LAST:event_uploadActionPerformed

    private void cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelActionPerformed
        this.setVisible(true);
    }//GEN-LAST:event_cancelActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Upload.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        uData = UserLogin.uData;
        pData = UserLogin.pData;
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Upload().setVisible(true);
            }
        });
    }
    public static BufferedImage scaleImage(int w, int h, BufferedImage img)throws Exception {
        BufferedImage bi;
        bi = new BufferedImage(w,h,BufferedImage.TRANSLUCENT);
        Graphics2D g2d = (Graphics2D) bi.createGraphics();
        g2d.setRenderingHint(RenderingHints.KEY_ANTIALIASING, RenderingHints.VALUE_ANTIALIAS_ON);
        g2d.setRenderingHints(new RenderingHints(RenderingHints.KEY_RENDERING,RenderingHints.VALUE_RENDER_QUALITY));
        g2d.drawImage(img, 0, 0, w, h, null);
        g2d.dispose();
        return bi;
    }
    public static userDatabase uData;
    public static PostDatabase pData;
    public String fileName;
    public registeredUser currentUser;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton cancel;
    private javax.swing.JTextField captiontextfield;
    private javax.swing.JLabel hashtagLabel;
    private javax.swing.JTextField hashtagTextField;
    private javax.swing.JLabel picturePreview;
    private javax.swing.JButton upload;
    // End of variables declaration//GEN-END:variables
}
